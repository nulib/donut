# Generated by hyrax:models:install
class FileSet < ActiveFedora::Base
  include ::Hyrax::FileSetBehavior
  include MicroserviceMinter

  # rubocop:disable Metrics/AbcSize
  # rubocop:disable Metrics/MethodLength
  def to_solr(solr_doc = {})
    super(solr_doc).tap do |doc|
      # This file set gets created pretty early on in the actor stack
      # before the CreateDerivativesJob is run and to_solr gets run
      # both times. We want to skip solrizing this stuff on the first
      # to_solr call
      if technical_metadata.present?
        doc[Solrizer.solr_name('exif_image_width', :stored_searchable)] = technical_metadata.image_width
        doc[Solrizer.solr_name('exif_image_height', :stored_searchable)] = technical_metadata.image_height
        doc[Solrizer.solr_name('exif_compression', :stored_searchable)] = technical_metadata.compression
        doc[Solrizer.solr_name('photometric_interpretation', :stored_searchable)] = technical_metadata.photometric_interpretation
        doc[Solrizer.solr_name('samples_per_pixel', :stored_searchable)] = technical_metadata.samples_per_pixel
        doc[Solrizer.solr_name('x_resolution', :stored_searchable)] = technical_metadata.x_resolution
        doc[Solrizer.solr_name('y_resolution', :stored_searchable)] = technical_metadata.y_resolution
        doc[Solrizer.solr_name('resolution_unit', :stored_searchable)] = technical_metadata.resolution_unit
        doc[Solrizer.solr_name('date_time', :stored_searchable)] = technical_metadata.date_time
        doc[Solrizer.solr_name('bits_per_sample', :stored_searchable)] = technical_metadata.bits_per_sample
        doc[Solrizer.solr_name('make', :stored_searchable)] = technical_metadata.make
        doc[Solrizer.solr_name('model', :stored_searchable)] = technical_metadata.model
        doc[Solrizer.solr_name('strip_offsets', :stored_searchable)] = technical_metadata.strip_offsets
        doc[Solrizer.solr_name('rows_per_strip', :stored_searchable)] = technical_metadata.rows_per_strip
        doc[Solrizer.solr_name('strip_byte_counts', :stored_searchable)] = technical_metadata.strip_byte_counts
        doc[Solrizer.solr_name('software', :stored_searchable)] = technical_metadata.software
        doc[Solrizer.solr_name('extra_samples', :stored_searchable)] = technical_metadata.extra_samples
        doc[Solrizer.solr_name('exif_tool_version', :stored_searchable)] = technical_metadata.exif_tool_version
        doc[Solrizer.solr_name('exif_all_data', :stored_searchable)] = technical_metadata.exif_all_data

      end
    end
  end
  # rubocop:enable Metrics/AbcSize
  # rubocop:enable Metrics/MethodLength

  # rubocop:disable Rails/FindBy
  # No find_by in AF: http://www.rubydoc.info/gems/active-fedora/ActiveFedora/FinderMethods
  def technical_metadata
    # we have to do a .first on the set resulting from this query since
    # it returns a relation and not an instance of the TechMD class
    @techmd || @techmd = TechnicalMetadata.where(file_set_id: id).first
  end
  # rubocop:enable Rails/FindBy
end
